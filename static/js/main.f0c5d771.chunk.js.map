{"version":3,"sources":["Bit.js","BitTable.js","TruthTable.js","App.js","index.js"],"names":["props","content","color","s","TouchableWithoutFeedback","View","style","styles","field","regular","Text","label","StyleSheet","create","height","width","borderWidth","alignItems","justifyContent","backgroundColor","borderLeftColor","borderTopColor","borderRightColor","borderBottomColor","fontWeight","fontSize","rows","matriz","map","row","r","columns","bit","c","Bit","key","flexDirection","container","Math","pow","n","cols","truthTable","newMatriz","rotateTable","abcMatriz","labelTable","BitTable","table","tabela","Array","i","ind","turn","cont","j","newCols","length","newRows","abc","App","createState","board","onOpenField","column","cloneBoard","state","setState","console","log","TruthTable","this","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"qQAGe,WAACA,GACd,IAAQC,EAAeD,EAAfC,QAEJC,EAAQ,KAMZ,OARuBF,EAANG,IAIC,IAAZF,IAAeC,EAAQ,WACX,IAAZD,IAAeC,EAAQ,YAK3B,aADA,CACCE,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAMC,MAAO,CAACC,EAAOC,MAAOD,EAAOE,SAAnC,SACE,cAACC,EAAA,EAAD,CAAMJ,MAAO,CAACC,EAAOI,MAAO,CAAET,UAA9B,SAAyCD,SAM3CM,EAASK,IAAWC,OAAO,CAC/BL,MAAO,CACLM,OAAQ,GACRC,MAAO,GACPC,YAAa,EACbC,WAAY,SACZC,eAAgB,UAElBT,QAAS,CACPU,gBAAiB,OACjBC,gBAAiB,OACjBC,eAAgB,OAChBC,iBAAkB,OAClBC,kBAAmB,QAErBZ,MAAO,CACLa,WAAY,OACZC,SAAU,MCnCC,WAACzB,GACd,IAAM0B,EAAO1B,EAAM2B,OAAOC,KAAI,SAACC,EAAKC,GAClC,IAAMC,EAAUF,EAAID,KAAI,SAACI,EAAKC,GAC5B,OAEE,uBADA,CACCC,EAAD,2BACMF,GADN,IAEEG,IAAKF,EAELhC,QAASD,EAAM2B,OAAOG,GAAGG,GACzB9B,EAAGH,EAAMG,QAIf,OACE,cAACE,EAAA,EAAD,CAAcC,MAAO,CAAE8B,cAAe,OAAtC,SACGL,GADQD,MAKf,OAAO,cAACzB,EAAA,EAAD,CAAMC,MAAOC,EAAO8B,UAApB,SAAgCX,KAGnCnB,EAASK,IAAWC,OAAO,CAC/BwB,UAAW,CAETlB,gBAAiB,UC1BN,WAACnB,GACd,IAAM0B,EAAOY,KAAKC,IAAI,EAAGvC,EAAMwC,GACzBC,EAAOzC,EAAMwC,EACbb,EAASe,EAAWD,EAAMf,GAC1BiB,EAAYC,EAAYjB,GACxBkB,EAAYC,EAAWL,GAE7B,OACE,eAACpC,EAAA,EAAD,WACE,cAAC0C,EAAD,CAAUpB,OAAQkB,IAClB,eAACxC,EAAA,EAAD,CAAMC,MAAO,CAAE8B,cAAe,OAA9B,UACE,cAACW,EAAD,CAAUpB,OAAQgB,IAClB,cAACI,EAAD,CACEpB,OAAQ3B,EAAMgD,MACd7C,GAAC,WAQLuC,EAAa,SAACZ,EAAGG,GAKrB,IAHA,IAAIgB,EAAS,IAAIC,MAAMpB,GAGdqB,EAAI,EAAGA,EAAIrB,EAAGqB,IAAK,CAE1BF,EAAOE,GAAK,IAAID,MAAMjB,GAKtB,IAJA,IAAImB,EAAM,EACNC,GAAO,EACPC,EAAOhB,KAAKC,IAAI,EAAGY,GAEdI,EAAI,EAAGA,EAAItB,EAAGsB,IACjBH,GAAOE,EAAO,GAAKD,GACrBD,IACAH,EAAOE,GAAGI,GAAK,IAEfF,GAAO,EACPD,IACAH,EAAOE,GAAGI,GAAK,GAEL,IAARH,IACFC,GAAO,GAKb,OAAOJ,GAGHL,EAAc,SAACjB,GAMnB,IALA,IAAI6B,EAAU7B,EAAO8B,OACjBC,EAAU/B,EAAO,GAAG8B,OAEpBd,EAAY,IAAIO,MAAMQ,GAEjBP,EAAI,EAAGA,EAAIO,EAASP,IAAK,CAEhCR,EAAUQ,GAAK,IAAID,MAAMM,GAEzB,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAASD,IAC3BZ,EAAUQ,GAAGI,GAAK5B,EAAO6B,EAAU,EAAID,GAAGJ,GAM9C,OAAOR,GAGHG,EAAa,SAACL,GAIlB,IAHA,IAAMkB,EAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACvChC,EAAS,GAEJwB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1BxB,EAAOwB,GAAK,GACZ,IAAK,IAAII,EAAI,EAAGA,EAAId,EAAMc,IACxB5B,EAAOwB,GAAGI,GAAKI,EAAIJ,GAMvB,OAFA5B,EAAO,GAAGc,EAAO,GAAK,IAEfd,GClFYiC,E,kDACnB,WAAY5D,GAAQ,IAAD,8BACjB,cAAMA,IAIR6D,YAAc,WACZ,MAAO,CACLC,MAAOd,EAAMV,KAAKC,IAAI,EAVd,GAUyB,EAAG,KAPrB,EAWnBwB,YAAc,SAAClC,EAAKmC,GAClB,IAAMF,EAAQG,EAAW,EAAKC,MAAMJ,OAIpC,EAAKK,SAAS,CAAEL,UAChBM,QAAQC,IAAI,QAfZ,EAAKH,MAAQ,EAAKL,cAFD,E,0CAoBnB,WACE,OACE,cAACxD,EAAA,EAAD,UACE,cAACiE,EAAD,CACE9B,EA3BI,EA4BJuB,YAAaQ,KAAKR,YAClBf,MAAOuB,KAAKL,MAAMJ,c,GA3BKU,aAkC3BxB,EAAQ,SAACtB,EAAMe,EAAMxC,GAEzB,IADA,IAAM0B,EAAS,GACNwB,EAAI,EAAGA,EAAIzB,EAAMyB,IAAK,CAC7BxB,EAAOwB,GAAK,GACZ,IAAK,IAAII,EAAI,EAAGA,EAAId,EAAMc,IACxB5B,EAAOwB,GAAGI,GAAKtD,EAGnB,OAAO0B,GAGHsC,EAAa,SAACH,GAClB,OAAOA,EAAMlC,KAAI,SAACF,GAChB,OAAOA,EAAKE,KAAI,SAACpB,GACf,OAAO,eAAKA,UClDZiE,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.f0c5d771.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, TouchableWithoutFeedback, View } from \"react-native\";\r\n\r\nexport default (props) => {\r\n  const { content, s } = props;\r\n\r\n  let color = null;\r\n  if (s) {\r\n    if (content === 1) color = \"#008000\";\r\n    if (content === 0) color = \"#FF0000\";\r\n  }\r\n\r\n  return (\r\n    //<TouchableWithoutFeedback onPress={onOpen}>\r\n    <TouchableWithoutFeedback>\r\n      <View style={[styles.field, styles.regular]}>\r\n        <Text style={[styles.label, { color }]}>{content}</Text>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  field: {\r\n    height: 50,\r\n    width: 50,\r\n    borderWidth: 5,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  regular: {\r\n    backgroundColor: \"#999\",\r\n    borderLeftColor: \"#CCC\",\r\n    borderTopColor: \"#CCC\",\r\n    borderRightColor: \"#333\",\r\n    borderBottomColor: \"#333\"\r\n  },\r\n  label: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 40\r\n  }\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport Bit from \"./Bit\";\r\n\r\nexport default (props) => {\r\n  const rows = props.matriz.map((row, r) => {\r\n    const columns = row.map((bit, c) => {\r\n      return (\r\n        //TODO! pesquisar como usar função apenas quando for passada, caso contrario não fazer nada\r\n        <Bit\r\n          {...bit}\r\n          key={c}\r\n          //onOpen={() => props.onOpenField(r, c)}\r\n          content={props.matriz[r][c]}\r\n          s={props.s}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <View key={r} style={{ flexDirection: \"row\" }}>\r\n        {columns}\r\n      </View>\r\n    );\r\n  });\r\n  return <View style={styles.container}>{rows}</View>;\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    // flexDirection:          'row',\r\n    backgroundColor: \"#EEE\"\r\n  }\r\n});\r\n","import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport BitTable from \"./BitTable\";\r\n\r\nexport default (props) => {\r\n  const rows = Math.pow(2, props.n);\r\n  const cols = props.n;\r\n  const matriz = truthTable(cols, rows);\r\n  const newMatriz = rotateTable(matriz);\r\n  const abcMatriz = labelTable(cols);\r\n\r\n  return (\r\n    <View>\r\n      <BitTable matriz={abcMatriz} />\r\n      <View style={{ flexDirection: \"row\" }}>\r\n        <BitTable matriz={newMatriz} />\r\n        <BitTable\r\n          matriz={props.table}\r\n          s\r\n          //onOpenField={props.onOpenField}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst truthTable = (r, c) => {\r\n  //Linhas\r\n  var tabela = new Array(r);\r\n\r\n  //Varia Linhas\r\n  for (var i = 0; i < r; i++) {\r\n    //Colunas\r\n    tabela[i] = new Array(c);\r\n    var ind = 0;\r\n    var turn = true;\r\n    var cont = Math.pow(2, i);\r\n    //Varia Coluna\r\n    for (var j = 0; j < c; j++) {\r\n      if (ind <= cont - 1 && turn) {\r\n        ind++;\r\n        tabela[i][j] = 0;\r\n      } else {\r\n        turn = false;\r\n        ind--;\r\n        tabela[i][j] = 1;\r\n      }\r\n      if (ind === 0) {\r\n        turn = true;\r\n      }\r\n    }\r\n  }\r\n  //console.table(tabela);\r\n  return tabela;\r\n};\r\n\r\nconst rotateTable = (matriz) => {\r\n  var newCols = matriz.length;\r\n  var newRows = matriz[0].length;\r\n\r\n  var newMatriz = new Array(newRows);\r\n\r\n  for (var i = 0; i < newRows; i++) {\r\n    //Colunas\r\n    newMatriz[i] = new Array(newCols);\r\n    //Varia Coluna\r\n    for (var j = 0; j < newCols; j++) {\r\n      newMatriz[i][j] = matriz[newCols - 1 - j][i];\r\n    }\r\n  }\r\n\r\n  //console.table(newMatriz);\r\n  //console.log(newRows);\r\n  return newMatriz;\r\n};\r\n\r\nconst labelTable = (cols) => {\r\n  const abc = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"];\r\n  var matriz = [];\r\n\r\n  for (var i = 0; i < 1; i++) {\r\n    matriz[i] = [];\r\n    for (var j = 0; j < cols; j++) {\r\n      matriz[i][j] = abc[j];\r\n    }\r\n  }\r\n\r\n  matriz[0][cols + 1] = \"S\";\r\n\r\n  return matriz;\r\n};\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     // flexDirection:          'row',\r\n//     backgroundColor: \"#EEE\"\r\n//   }\r\n// });\r\n","import React, { Component } from \"react\";\nimport { View } from \"react-native\";\nimport \"./styles.css\";\nimport TruthTable from \"./TruthTable\";\n\nconst varis = 3;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.createState();\n  }\n\n  createState = () => {\n    return {\n      board: table(Math.pow(2, varis), 1, 1)\n    };\n  };\n\n  onOpenField = (row, column) => {\n    const board = cloneBoard(this.state.board);\n\n    //board[row][column] = 0;\n\n    this.setState({ board });\n    console.log(\"foi\");\n  };\n\n  render() {\n    return (\n      <View>\n        <TruthTable\n          n={varis}\n          onOpenField={this.onOpenField}\n          table={this.state.board}\n        />\n      </View>\n    );\n  }\n}\n\nconst table = (rows, cols, content) => {\n  const matriz = [];\n  for (var i = 0; i < rows; i++) {\n    matriz[i] = [];\n    for (var j = 0; j < cols; j++) {\n      matriz[i][j] = content;\n    }\n  }\n  return matriz;\n};\n\nconst cloneBoard = (board) => {\n  return board.map((rows) => {\n    return rows.map((field) => {\n      return { ...field };\n    });\n  });\n};\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}